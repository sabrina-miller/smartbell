#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Feb 19 21:58:05 2020

@author: emilym22
"""

#import coremltools
#import numpy
#from keras.datasets import mnist
#from keras.models import Sequential
#from keras.layers import Dense
#from keras.layers import Dropout
#from keras.utils import np_utils
#from keras.models import load_model
#
#
#def convert_model(model):
#	print('converting...')
#	coreml_model = coremltools.converters.keras.convert(model,'','')
#	coreml_model.author = 'YOUR NAME'
#	coreml_model.license = 'MIT'
#	coreml_model.short_description = 'Reads a handwritten digit. The model is based on keras mnist examples here. https://github.com/fchollet/keras/blob/master/examples/mnist_cnn.py but altered to strictly set up channels last as input_shape.'
#	coreml_model.input_description['image'] = 'A 28x28 pixel Image'
#	coreml_model.output_description['output1'] = 'A one-hot Multiarray were the index with the biggest float value (0-1) is the recognized digit. '
#	coreml_model.save('keras_mnist_cnn.mlmodel')
#	print('model converted')
#
#
#import os.path
#if os.path.isfile('my_model.h5'): 
#	model = load_model('my_model.h5', compile=False)
#	convert_model(model)
#else:
#	print('no model found')

from keras.models import load_model
from keras.layers import Input, Dense
from tensorflow import Tensor
from keras import backend as K
from keras.engine import InputLayer
#
#model = load_model('my_model.h5', compile=False)
#
#for layer in model.layers:
#	print(layer)
#
#
#input_layer1 = InputLayer(input_shape=(51, 68, 3), name="input_1")
#input_layer2 = InputLayer(input_shape=(51, 68, 3), name="input_2")
#print("input shape:", input_layer1.input_shape)
#print("input tensor:", input_layer1.input)
#print("name:", input_layer1.name)
#print("sparse:", input_layer1.sparse)
#print("dtype:", input_layer1.dtype)
#
#model.layers[0] = input_layer1
#model.layers[1] = input_layer2
#model.save("reshaped-model.h5")
#
#import coremltools
#coreml_model = coremltools.converters.keras.convert('reshaped-model.h5', is_bgr=True,
#						  input_names=['image1', 'image2'], image_input_names=['image1', 'image2'],
#						  output_names=['output'],blue_bias=-103.939, green_bias=-116.779, red_bias=-123.68)
#
#
#coreml_model.save('Output.mlmodel')

import coremltools
output_labels = ['Squat', 'Deadlift']
mlmodel = coremltools.converters.keras.convert('my_model.h5', input_names=['accel'], output_names=['output'], class_labels=output_labels)

mlmodel.author = 'Sophie Saunders and Emily Moise'
mlmodel.short_description = 'Squat/Deadlift recognition'
mlmodel.input_description['accel'] = 'Takes x, y, z acceleration data as input'
mlmodel.output_description['output'] = 'Prediction of Exercise'

mlmodel.save('coreml_model.mlmodel')